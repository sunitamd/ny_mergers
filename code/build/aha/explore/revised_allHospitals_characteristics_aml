log using log_us_descr, replace

quietly
/*working directory*/
cd "/gpfs/data/desailab/home/ny_mergers/data_hospclean"
/*create a loop to automatically analyze US and NY hospital level data*/
foreach x in "hospmerger_ny_fin0210.dta" "hospmerger_fin0210.dta" {
use `x', clear
/*variable for hospitals never merged*/
bysort id: egen non_m= min(post_target == 0 & post_acquirer==0)
/*create variable for any target hospital that has mergered, regarless of pre-post status*/
bysort id: egen pre_post= max(post_target)
/*specifically creates variable for pre-merger target hospitals*/
gen pre_m_t= post_target==0 & pre_post==1
/*same process for the acquirers*/
bysort id: egen pre_post_a= max(post_acquirer)
gen pre_m_a= post_acquirer==0 & pre_post_a==1

/*create one combined variable to differentitate hospitals based on ownership; label*/
gen own_status= .
replace own_status= 0 if own_np2==1
replace own_status=1 if own_fp2==1
replace own_status= 2 if own_gov2==1
label define own_status_lbl 0"Non-Profit" 1"For-Profit" 2"Government Owned"
label values own_status own_status_lbl

/*create one variable for the merger status of target and acquired hospitals; label*/
gen merger_status= .
replace merger_status= 0 if non_m==1
replace merger_status= 1 if pre_m_t==1
replace merger_status=2 if post_target==1
replace merger_status= 3 if pre_m_a==1
replace merger_status=4 if post_acquirer==1
label define merg_status_lbl 0"Non-Merger" 1"Pre-Merger Target" 2"Post-Merger Target" 3"Pre-Merger Acquirer" 4"Post-Merger Acquirer"
label values merger_status merg_status_lbl

/*variable for proportion of medicaid patients that are from total admission*/
gen prop_medicaid= mcddc2/admtot2

/* mean, sd and number of descriptive variables per merger status*/
bysort merger_status: egen madm=mean(admtot2)
bysort merger_status: egen sadm=sd(admtot2)
bysort merger_status: egen mmedcount=mean(mcddc2)
bysort merger_status: egen smedcount=sd(mcddc2)
bysort merger_status: egen mprop=mean(prop_medicaid)
bysort merger_status: egen sprop=sd(prop_medicaid)
bysort merger_status: egen mteach=mean(teaching2)
bysort merger_status: egen steach=sd(teaching2)
bysort merger_status: egen mnonpr=mean(own_np2)
bysort merger_status: egen mfropr=mean(own_fp2)
bysort merger_status: egen mgov=mean(own_gov2)
bysort merger_status: egen ngov=total(own_gov2)
bysort merger_status: egen nnonpr=total(own_np2)
bysort merger_status: egen nfropr=total(own_fp2)

/*variable labels*/
label variable madm "Admission (mean)"
label variable sadm "Admission (sd)"
label variable mmedcount "Medicare Admissions (mean)"
label variable smedcount "Medicare Admissions (sd)"
label variable mprop "Medicare Admissions Proportion (mean)"
label variable sprop "Medicare Admissions Proportion (sd)"
label variable mteach "Teaching (mean)"
label variable steach "Teaching (sd)"
label variable mnonpr "Proportion Non-Profit"
label variable mfropr "Proportion For-Profit"
label variable mgov "Proportion Government"
label variable ngov "N Government"
label variable nnonpr "N Non-Profit"
label variable nfropr "N For-Profit"

/*table of descriptive stats for each merger status*/
tabstat madm sadm mmedcount smedcount mprop sprop mteach steach nnonpr nfropr ngov mnonpr mfropr mgov, by(merger_status)
}
